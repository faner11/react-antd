/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as NeedAuthRouteRouteImport } from './routes/_need-auth/route'
import { Route as NeedAuthSplatRouteImport } from './routes/_need-auth/$'

const NeedAuthIndexLazyRouteImport = createFileRoute('/_need-auth/')()
const NeedAuthTableIndexLazyRouteImport =
  createFileRoute('/_need-auth/table/')()
const NeedAuthStateReactQueryLazyRouteImport = createFileRoute(
  '/_need-auth/state/react-query',
)()
const NeedAuthStateJotaiIndexLazyRouteImport = createFileRoute(
  '/_need-auth/state/jotai/',
)()

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))
const NeedAuthRouteRoute = NeedAuthRouteRouteImport.update({
  id: '/_need-auth',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/_need-auth/route.lazy').then((d) => d.Route),
)
const NeedAuthIndexLazyRoute = NeedAuthIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NeedAuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_need-auth/index.lazy').then((d) => d.Route),
)
const NeedAuthSplatRoute = NeedAuthSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => NeedAuthRouteRoute,
} as any)
const NeedAuthTableIndexLazyRoute = NeedAuthTableIndexLazyRouteImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => NeedAuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_need-auth/table/index.lazy').then((d) => d.Route),
)
const NeedAuthStateReactQueryLazyRoute =
  NeedAuthStateReactQueryLazyRouteImport.update({
    id: '/state/react-query',
    path: '/state/react-query',
    getParentRoute: () => NeedAuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_need-auth/state/react-query.lazy').then((d) => d.Route),
  )
const NeedAuthStateJotaiIndexLazyRoute =
  NeedAuthStateJotaiIndexLazyRouteImport.update({
    id: '/state/jotai/',
    path: '/state/jotai/',
    getParentRoute: () => NeedAuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_need-auth/state/jotai/index.lazy').then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/$': typeof NeedAuthSplatRoute
  '/': typeof NeedAuthIndexLazyRoute
  '/state/react-query': typeof NeedAuthStateReactQueryLazyRoute
  '/table': typeof NeedAuthTableIndexLazyRoute
  '/state/jotai': typeof NeedAuthStateJotaiIndexLazyRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/$': typeof NeedAuthSplatRoute
  '/': typeof NeedAuthIndexLazyRoute
  '/state/react-query': typeof NeedAuthStateReactQueryLazyRoute
  '/table': typeof NeedAuthTableIndexLazyRoute
  '/state/jotai': typeof NeedAuthStateJotaiIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_need-auth': typeof NeedAuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_need-auth/$': typeof NeedAuthSplatRoute
  '/_need-auth/': typeof NeedAuthIndexLazyRoute
  '/_need-auth/state/react-query': typeof NeedAuthStateReactQueryLazyRoute
  '/_need-auth/table/': typeof NeedAuthTableIndexLazyRoute
  '/_need-auth/state/jotai/': typeof NeedAuthStateJotaiIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/$'
    | '/'
    | '/state/react-query'
    | '/table'
    | '/state/jotai'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/$' | '/' | '/state/react-query' | '/table' | '/state/jotai'
  id:
    | '__root__'
    | '/_need-auth'
    | '/login'
    | '/_need-auth/$'
    | '/_need-auth/'
    | '/_need-auth/state/react-query'
    | '/_need-auth/table/'
    | '/_need-auth/state/jotai/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NeedAuthRouteRoute: typeof NeedAuthRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_need-auth': {
      id: '/_need-auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NeedAuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_need-auth/': {
      id: '/_need-auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NeedAuthIndexLazyRouteImport
      parentRoute: typeof NeedAuthRouteRoute
    }
    '/_need-auth/$': {
      id: '/_need-auth/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof NeedAuthSplatRouteImport
      parentRoute: typeof NeedAuthRouteRoute
    }
    '/_need-auth/table/': {
      id: '/_need-auth/table/'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof NeedAuthTableIndexLazyRouteImport
      parentRoute: typeof NeedAuthRouteRoute
    }
    '/_need-auth/state/react-query': {
      id: '/_need-auth/state/react-query'
      path: '/state/react-query'
      fullPath: '/state/react-query'
      preLoaderRoute: typeof NeedAuthStateReactQueryLazyRouteImport
      parentRoute: typeof NeedAuthRouteRoute
    }
    '/_need-auth/state/jotai/': {
      id: '/_need-auth/state/jotai/'
      path: '/state/jotai'
      fullPath: '/state/jotai'
      preLoaderRoute: typeof NeedAuthStateJotaiIndexLazyRouteImport
      parentRoute: typeof NeedAuthRouteRoute
    }
  }
}

interface NeedAuthRouteRouteChildren {
  NeedAuthSplatRoute: typeof NeedAuthSplatRoute
  NeedAuthIndexLazyRoute: typeof NeedAuthIndexLazyRoute
  NeedAuthStateReactQueryLazyRoute: typeof NeedAuthStateReactQueryLazyRoute
  NeedAuthTableIndexLazyRoute: typeof NeedAuthTableIndexLazyRoute
  NeedAuthStateJotaiIndexLazyRoute: typeof NeedAuthStateJotaiIndexLazyRoute
}

const NeedAuthRouteRouteChildren: NeedAuthRouteRouteChildren = {
  NeedAuthSplatRoute: NeedAuthSplatRoute,
  NeedAuthIndexLazyRoute: NeedAuthIndexLazyRoute,
  NeedAuthStateReactQueryLazyRoute: NeedAuthStateReactQueryLazyRoute,
  NeedAuthTableIndexLazyRoute: NeedAuthTableIndexLazyRoute,
  NeedAuthStateJotaiIndexLazyRoute: NeedAuthStateJotaiIndexLazyRoute,
}

const NeedAuthRouteRouteWithChildren = NeedAuthRouteRoute._addFileChildren(
  NeedAuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  NeedAuthRouteRoute: NeedAuthRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
