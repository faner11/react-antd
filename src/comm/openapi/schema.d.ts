/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/posts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get posts */
        get: operations["list-posts"];
        put?: never;
        /** @description Create post */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["post"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["post"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/posts/{post-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get post by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description key: id of post */
                    "post-id": components["parameters"]["post-id"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["post"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** @description Delete post */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description key: id of post */
                    "post-id": components["parameters"]["post-id"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** @description Update post */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description key: id of post */
                    "post-id": components["parameters"]["post-id"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["post"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["post"];
                    };
                };
            };
        };
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        post: {
            userId?: number;
            id?: number;
            title?: string;
            body?: string;
        };
    };
    responses: never;
    parameters: {
        /** @description key: id of post */
        "post-id": number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "list-posts": {
        parameters: {
            query?: {
                /** @description Filter results by user ID */
                userId?: number;
                /** @description Filter results by title */
                title?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["post"][];
                };
            };
        };
    };
}
